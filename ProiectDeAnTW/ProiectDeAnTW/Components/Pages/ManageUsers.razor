@page "/manageusers"
@using Microsoft.EntityFrameworkCore
@using ProiectDeAnMRSTW.Infrastructure.Data
@inject ApplicationDbContext Db
@rendermode InteractiveServer

@code {
    private List<ApplicationUser> users = new();
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    // private async Task LoadUsers()
    // {
    //     users = await Db.Users
    //         .Where(u => string.IsNullOrEmpty(searchTerm) || u.Email.Contains(searchTerm))
    //         .ToListAsync();
    // }
    private async Task LoadUsers()
    {
        var query = Db.Users.AsQueryable();

        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            query = query.Where(u => EF.Functions.Like(u.Email, $"%{searchTerm}%"));
        }

        users = await query.ToListAsync();
    }

    private async Task DeleteUser(int id)
    {
        var user = await Db.Users.FindAsync(id);
        if (user != null)
        {
            Db.Users.Remove(user);
            await Db.SaveChangesAsync();
            await LoadUsers();
        }
    }
}

<h3>Users</h3>

<input class="form-control mb-2" placeholder="Search..." @bind="searchTerm" @oninput="async _ => await LoadUsers()" />

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>Email  - @user.Email</td>
                <td>Age - @user.Age</td>
                @* <td> *@
                @*     <button class="btn btn-sm btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button> *@
                @* </td> *@
            </tr>
        }
    </tbody>
</table>
