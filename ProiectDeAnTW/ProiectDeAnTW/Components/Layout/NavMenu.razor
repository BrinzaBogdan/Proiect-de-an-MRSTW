@using ProiectDeAnTW.Data.Services
@using ProiectDeAnTW.Models
@implements IDisposable
@inject NavigationManager NavigationManager
@inject LoadDataToPage3 LoadDataService;
<head> 
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet">
</head>


<div class="nav-container">
    

    
    <nav class="nav-menu" style="display: flex; align-items: center; ">
        <div class="navbar navbar-dark" style="justify-content: flex-start; background-color: #343a40; border-radius: 5%; display: flex;">
            <div class="container-fluid">
                <a class="navbar-brand" href="">BogSanLu SRL</a>
            </div>
        </div>
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="bi bi-house-door-fill-nav-menu"></span> Home
        </NavLink>
        <NavLink class="nav-link" href="mainpage" Match="NavLinkMatch.All">
                <span style="justify-content: center    ;">Recenzii</span>
            <div class="dropdown">
             <div style="display: flex;justify-content: center; gap:10px; align-items: center;">
                <div class="gift-icon"></div>
                <span class="menu_text" ></span> Promotii
            </div>

            @if (CategoriiDeAlimente == null)
            {
                <p>Se încarcă datele...</p>
            }
            else
            {
                <div class="dropdown-menu">
                    @foreach (var categorie in CategoriiDeAlimente)
                    {
                        <a href="@categorie.PageLink">@categorie.Category</a>
                    }
                </div>
                }</div>
        </NavLink>
        <NavLink class="nav-link" href="auth">
            <span class="bi bi-lock-nav-menu"></span> Auth Required
        </NavLink>

        <AuthorizeView>
            <Authorized>
                <NavLink class="nav-link" href="Account/Manage">
                    <span class="bi bi-person-fill-nav-menu"></span> @context.User.Identity?.Name
                </NavLink>
                <form action="Account/Logout" method="post" class="logout-form">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        <span class="bi bi-arrow-bar-left-nav-menu"></span> Logout
                    </button>
                </form>
            </Authorized>
            <NotAuthorized>
                <NavLink class="nav-link" href="Account/Register">
                    <span class="bi bi-person-nav-menu"></span> Register
                </NavLink>
                <NavLink class="nav-link" href="Account/Login">
                    <span class="bi bi-person-badge-nav-menu"></span> Login
                </NavLink>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>


@code {
    public List<CategorieAliment> CategoriiDeAlimente { get; set; }
    protected override async Task OnInitializedAsync()
    {
        CategoriiDeAlimente = await LoadDataService.GetAllCategories();
    }

    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

